// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: websocket.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//******************************* enum *******************************
type MsgRecvOpt int32

const (
	MsgRecvOpt_RecvAndTip MsgRecvOpt = 0 // 接收并提示
	MsgRecvOpt_Recv       MsgRecvOpt = 1 // 接收但不提示
	MsgRecvOpt_NotRecv    MsgRecvOpt = 2 // 不接收
)

// Enum value maps for MsgRecvOpt.
var (
	MsgRecvOpt_name = map[int32]string{
		0: "RecvAndTip",
		1: "Recv",
		2: "NotRecv",
	}
	MsgRecvOpt_value = map[string]int32{
		"RecvAndTip": 0,
		"Recv":       1,
		"NotRecv":    2,
	}
)

func (x MsgRecvOpt) Enum() *MsgRecvOpt {
	p := new(MsgRecvOpt)
	*p = x
	return p
}

func (x MsgRecvOpt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgRecvOpt) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[0].Descriptor()
}

func (MsgRecvOpt) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[0]
}

func (x MsgRecvOpt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgRecvOpt.Descriptor instead.
func (MsgRecvOpt) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{0}
}

//******************************* enum *******************************
type PushEvent int32

const (
	PushEvent_receiveMsg PushEvent = 0 // 接收消息
	PushEvent_updateConv PushEvent = 1 // 会话变更
)

// Enum value maps for PushEvent.
var (
	PushEvent_name = map[int32]string{
		0: "receiveMsg",
		1: "updateConv",
	}
	PushEvent_value = map[string]int32{
		"receiveMsg": 0,
		"updateConv": 1,
	}
)

func (x PushEvent) Enum() *PushEvent {
	p := new(PushEvent)
	*p = x
	return p
}

func (x PushEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PushEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[1].Descriptor()
}

func (PushEvent) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[1]
}

func (x PushEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PushEvent.Descriptor instead.
func (PushEvent) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{1}
}

//******************************* model *******************************
type PushBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event PushEvent `protobuf:"varint,1,opt,name=event,proto3,enum=pb.PushEvent" json:"event,omitempty"` // 推送事件
	Data  []byte    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                      // 推送数据
}

func (x *PushBody) Reset() {
	*x = PushBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushBody) ProtoMessage() {}

func (x *PushBody) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushBody.ProtoReflect.Descriptor instead.
func (*PushBody) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{0}
}

func (x *PushBody) GetEvent() PushEvent {
	if x != nil {
		return x.Event
	}
	return PushEvent_receiveMsg
}

func (x *PushBody) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MsgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientMsgID string       `protobuf:"bytes,1,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	ServerMsgID string       `protobuf:"bytes,2,opt,name=serverMsgID,proto3" json:"serverMsgID,omitempty"`
	SenderID    string       `protobuf:"bytes,3,opt,name=senderID,proto3" json:"senderID,omitempty"`
	ConvID      string       `protobuf:"bytes,4,opt,name=convID,proto3" json:"convID,omitempty"`
	ContentType int32        `protobuf:"varint,5,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Content     []byte       `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	ClientTime  int64        `protobuf:"varint,7,opt,name=clientTime,proto3" json:"clientTime,omitempty"`
	ServerTime  int64        `protobuf:"varint,8,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	Seq         uint32       `protobuf:"varint,9,opt,name=seq,proto3" json:"seq,omitempty"`
	OfflinePush *OfflinePush `protobuf:"bytes,10,opt,name=offlinePush,proto3" json:"offlinePush,omitempty"`
	MsgOptions  *MsgOptions  `protobuf:"bytes,11,opt,name=msgOptions,proto3" json:"msgOptions,omitempty"`
}

func (x *MsgData) Reset() {
	*x = MsgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData) ProtoMessage() {}

func (x *MsgData) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData.ProtoReflect.Descriptor instead.
func (*MsgData) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{1}
}

func (x *MsgData) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *MsgData) GetServerMsgID() string {
	if x != nil {
		return x.ServerMsgID
	}
	return ""
}

func (x *MsgData) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *MsgData) GetConvID() string {
	if x != nil {
		return x.ConvID
	}
	return ""
}

func (x *MsgData) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MsgData) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MsgData) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

func (x *MsgData) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *MsgData) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MsgData) GetOfflinePush() *OfflinePush {
	if x != nil {
		return x.OfflinePush
	}
	return nil
}

func (x *MsgData) GetMsgOptions() *MsgOptions {
	if x != nil {
		return x.MsgOptions
	}
	return nil
}

type MsgDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MsgData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MsgDataList) Reset() {
	*x = MsgDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDataList) ProtoMessage() {}

func (x *MsgDataList) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDataList.ProtoReflect.Descriptor instead.
func (*MsgDataList) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{2}
}

func (x *MsgDataList) GetList() []*MsgData {
	if x != nil {
		return x.List
	}
	return nil
}

type OfflinePush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc          string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Ex            string `protobuf:"bytes,3,opt,name=ex,proto3" json:"ex,omitempty"`
	IOSPushSound  string `protobuf:"bytes,4,opt,name=iOSPushSound,proto3" json:"iOSPushSound,omitempty"`
	IOSBadgeCount bool   `protobuf:"varint,5,opt,name=iOSBadgeCount,proto3" json:"iOSBadgeCount,omitempty"`
}

func (x *OfflinePush) Reset() {
	*x = OfflinePush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflinePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflinePush) ProtoMessage() {}

func (x *OfflinePush) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflinePush.ProtoReflect.Descriptor instead.
func (*OfflinePush) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{3}
}

func (x *OfflinePush) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfflinePush) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OfflinePush) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *OfflinePush) GetIOSPushSound() string {
	if x != nil {
		return x.IOSPushSound
	}
	return ""
}

func (x *OfflinePush) GetIOSBadgeCount() bool {
	if x != nil {
		return x.IOSBadgeCount
	}
	return false
}

type MsgOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage bool `protobuf:"varint,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Unread  bool `protobuf:"varint,2,opt,name=unread,proto3" json:"unread,omitempty"`
}

func (x *MsgOptions) Reset() {
	*x = MsgOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgOptions) ProtoMessage() {}

func (x *MsgOptions) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgOptions.ProtoReflect.Descriptor instead.
func (*MsgOptions) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{4}
}

func (x *MsgOptions) GetStorage() bool {
	if x != nil {
		return x.Storage
	}
	return false
}

func (x *MsgOptions) GetUnread() bool {
	if x != nil {
		return x.Unread
	}
	return false
}

type ConvData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvID      string `protobuf:"bytes,1,opt,name=convID,proto3" json:"convID,omitempty"`
	MaxSeq      uint32 `protobuf:"varint,2,opt,name=maxSeq,proto3" json:"maxSeq,omitempty"`
	MinSeq      uint32 `protobuf:"varint,3,opt,name=minSeq,proto3" json:"minSeq,omitempty"`
	UnreadCount uint32 `protobuf:"varint,4,opt,name=unreadCount,proto3" json:"unreadCount,omitempty"`
}

func (x *ConvData) Reset() {
	*x = ConvData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvData) ProtoMessage() {}

func (x *ConvData) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvData.ProtoReflect.Descriptor instead.
func (*ConvData) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{5}
}

func (x *ConvData) GetConvID() string {
	if x != nil {
		return x.ConvID
	}
	return ""
}

func (x *ConvData) GetMaxSeq() uint32 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

func (x *ConvData) GetMinSeq() uint32 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

func (x *ConvData) GetUnreadCount() uint32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

type ConvDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ConvData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ConvDataList) Reset() {
	*x = ConvDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvDataList) ProtoMessage() {}

func (x *ConvDataList) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvDataList.ProtoReflect.Descriptor instead.
func (*ConvDataList) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{6}
}

func (x *ConvDataList) GetList() []*ConvData {
	if x != nil {
		return x.List
	}
	return nil
}

type PullMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvID  string   `protobuf:"bytes,1,opt,name=convID,proto3" json:"convID,omitempty"`
	SeqList []uint32 `protobuf:"varint,2,rep,packed,name=SeqList,proto3" json:"SeqList,omitempty"`
}

func (x *PullMsg) Reset() {
	*x = PullMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullMsg) ProtoMessage() {}

func (x *PullMsg) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullMsg.ProtoReflect.Descriptor instead.
func (*PullMsg) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{7}
}

func (x *PullMsg) GetConvID() string {
	if x != nil {
		return x.ConvID
	}
	return ""
}

func (x *PullMsg) GetSeqList() []uint32 {
	if x != nil {
		return x.SeqList
	}
	return nil
}

type PullMsgList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*PullMsg `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PullMsgList) Reset() {
	*x = PullMsgList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullMsgList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullMsgList) ProtoMessage() {}

func (x *PullMsgList) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullMsgList.ProtoReflect.Descriptor instead.
func (*PullMsgList) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{8}
}

func (x *PullMsgList) GetList() []*PullMsg {
	if x != nil {
		return x.List
	}
	return nil
}

type UserConversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                     // 对话id
	Name       string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                 // 对话名称
	Avatar     string     `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                             // 对话头像
	Seq        uint32     `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`                                  // 对话最新消息的seq 一定是 0 开始的递增数字
	Unread     uint32     `protobuf:"varint,5,opt,name=unread,proto3" json:"unread,omitempty"`                            // 未读消息数量
	Timestamp  int64      `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                      // 最新消息的时闢戳 13位时间戳
	Top        bool       `protobuf:"varint,7,opt,name=top,proto3" json:"top,omitempty"`                                  // 是否置顶
	MsgRecvOpt MsgRecvOpt `protobuf:"varint,8,opt,name=msgRecvOpt,proto3,enum=pb.MsgRecvOpt" json:"msgRecvOpt,omitempty"` // 消息接收选项
	IsDeleted  bool       `protobuf:"varint,9,opt,name=isDeleted,proto3" json:"isDeleted,omitempty"`                      // 是否已删除
	MinSeq     uint32     `protobuf:"varint,10,opt,name=minSeq,proto3" json:"minSeq,omitempty"`                           // 最小seq
}

func (x *UserConversation) Reset() {
	*x = UserConversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConversation) ProtoMessage() {}

func (x *UserConversation) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConversation.ProtoReflect.Descriptor instead.
func (*UserConversation) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{9}
}

func (x *UserConversation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserConversation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserConversation) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserConversation) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *UserConversation) GetUnread() uint32 {
	if x != nil {
		return x.Unread
	}
	return 0
}

func (x *UserConversation) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UserConversation) GetTop() bool {
	if x != nil {
		return x.Top
	}
	return false
}

func (x *UserConversation) GetMsgRecvOpt() MsgRecvOpt {
	if x != nil {
		return x.MsgRecvOpt
	}
	return MsgRecvOpt_RecvAndTip
}

func (x *UserConversation) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *UserConversation) GetMinSeq() uint32 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

type IMMsgDataMQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId string   `protobuf:"bytes,1,opt,name=traceId,proto3" json:"traceId,omitempty"`
	Msg     *MsgData `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *IMMsgDataMQ) Reset() {
	*x = IMMsgDataMQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMsgDataMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMsgDataMQ) ProtoMessage() {}

func (x *IMMsgDataMQ) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMsgDataMQ.ProtoReflect.Descriptor instead.
func (*IMMsgDataMQ) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{10}
}

func (x *IMMsgDataMQ) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *IMMsgDataMQ) GetMsg() *MsgData {
	if x != nil {
		return x.Msg
	}
	return nil
}

type IMMsgPushMQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    string    `protobuf:"bytes,1,opt,name=traceId,proto3" json:"traceId,omitempty"`
	PushBody   *PushBody `protobuf:"bytes,2,opt,name=pushBody,proto3" json:"pushBody,omitempty"`
	AddUserIds []string  `protobuf:"bytes,3,rep,name=addUserIds,proto3" json:"addUserIds,omitempty"`
}

func (x *IMMsgPushMQ) Reset() {
	*x = IMMsgPushMQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMsgPushMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMsgPushMQ) ProtoMessage() {}

func (x *IMMsgPushMQ) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMsgPushMQ.ProtoReflect.Descriptor instead.
func (*IMMsgPushMQ) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{11}
}

func (x *IMMsgPushMQ) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *IMMsgPushMQ) GetPushBody() *PushBody {
	if x != nil {
		return x.PushBody
	}
	return nil
}

func (x *IMMsgPushMQ) GetAddUserIds() []string {
	if x != nil {
		return x.AddUserIds
	}
	return nil
}

//******************************* params *******************************
type ListUserConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PageNo   int32  `protobuf:"varint,2,opt,name=PageNo,proto3" json:"PageNo,omitempty"`
	PageSize int32  `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"` // 默认 是 5000
}

func (x *ListUserConversationReq) Reset() {
	*x = ListUserConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserConversationReq) ProtoMessage() {}

func (x *ListUserConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserConversationReq.ProtoReflect.Descriptor instead.
func (*ListUserConversationReq) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{12}
}

func (x *ListUserConversationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserConversationReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListUserConversationReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListUserConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserConversations []*UserConversation `protobuf:"bytes,1,rep,name=userConversations,proto3" json:"userConversations,omitempty"`
}

func (x *ListUserConversationResp) Reset() {
	*x = ListUserConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserConversationResp) ProtoMessage() {}

func (x *ListUserConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserConversationResp.ProtoReflect.Descriptor instead.
func (*ListUserConversationResp) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{13}
}

func (x *ListUserConversationResp) GetUserConversations() []*UserConversation {
	if x != nil {
		return x.UserConversations
	}
	return nil
}

type GetUserConversationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string   `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ConversationIds []string `protobuf:"bytes,2,rep,name=ConversationIds,proto3" json:"ConversationIds,omitempty"`
}

func (x *GetUserConversationsReq) Reset() {
	*x = GetUserConversationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConversationsReq) ProtoMessage() {}

func (x *GetUserConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConversationsReq.ProtoReflect.Descriptor instead.
func (*GetUserConversationsReq) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserConversationsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserConversationsReq) GetConversationIds() []string {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

type GetUserConversationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserConversations []*UserConversation `protobuf:"bytes,1,rep,name=userConversations,proto3" json:"userConversations,omitempty"`
}

func (x *GetUserConversationsResp) Reset() {
	*x = GetUserConversationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConversationsResp) ProtoMessage() {}

func (x *GetUserConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConversationsResp.ProtoReflect.Descriptor instead.
func (*GetUserConversationsResp) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserConversationsResp) GetUserConversations() []*UserConversation {
	if x != nil {
		return x.UserConversations
	}
	return nil
}

type ClearUnreadCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ConversationId string `protobuf:"bytes,2,opt,name=ConversationId,proto3" json:"ConversationId,omitempty"`
}

func (x *ClearUnreadCountReq) Reset() {
	*x = ClearUnreadCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearUnreadCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUnreadCountReq) ProtoMessage() {}

func (x *ClearUnreadCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUnreadCountReq.ProtoReflect.Descriptor instead.
func (*ClearUnreadCountReq) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{16}
}

func (x *ClearUnreadCountReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ClearUnreadCountReq) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type ClearUnreadCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearUnreadCountResp) Reset() {
	*x = ClearUnreadCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearUnreadCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUnreadCountResp) ProtoMessage() {}

func (x *ClearUnreadCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUnreadCountResp.ProtoReflect.Descriptor instead.
func (*ClearUnreadCountResp) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{17}
}

type DeleteConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ConversationId string `protobuf:"bytes,2,opt,name=ConversationId,proto3" json:"ConversationId,omitempty"`
}

func (x *DeleteConversationReq) Reset() {
	*x = DeleteConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationReq) ProtoMessage() {}

func (x *DeleteConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationReq.ProtoReflect.Descriptor instead.
func (*DeleteConversationReq) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteConversationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteConversationReq) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type DeleteConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteConversationResp) Reset() {
	*x = DeleteConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationResp) ProtoMessage() {}

func (x *DeleteConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationResp.ProtoReflect.Descriptor instead.
func (*DeleteConversationResp) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{19}
}

type DeleteConversationAllMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ConversationId string `protobuf:"bytes,2,opt,name=ConversationId,proto3" json:"ConversationId,omitempty"`
}

func (x *DeleteConversationAllMsgReq) Reset() {
	*x = DeleteConversationAllMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConversationAllMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationAllMsgReq) ProtoMessage() {}

func (x *DeleteConversationAllMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationAllMsgReq.ProtoReflect.Descriptor instead.
func (*DeleteConversationAllMsgReq) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteConversationAllMsgReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteConversationAllMsgReq) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type DeleteConversationAllMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteConversationAllMsgResp) Reset() {
	*x = DeleteConversationAllMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConversationAllMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationAllMsgResp) ProtoMessage() {}

func (x *DeleteConversationAllMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationAllMsgResp.ProtoReflect.Descriptor instead.
func (*DeleteConversationAllMsgResp) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{21}
}

type PullMsgBySeqReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	UserId         string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	OldestSeq      uint32 `protobuf:"varint,3,opt,name=oldestSeq,proto3" json:"oldestSeq,omitempty"` // 最旧的seq
	PageSize       int32  `protobuf:"varint,4,opt,name=PageSize,proto3" json:"PageSize,omitempty"`   // 默认 是 100
}

func (x *PullMsgBySeqReq) Reset() {
	*x = PullMsgBySeqReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullMsgBySeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullMsgBySeqReq) ProtoMessage() {}

func (x *PullMsgBySeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullMsgBySeqReq.ProtoReflect.Descriptor instead.
func (*PullMsgBySeqReq) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{22}
}

func (x *PullMsgBySeqReq) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *PullMsgBySeqReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PullMsgBySeqReq) GetOldestSeq() uint32 {
	if x != nil {
		return x.OldestSeq
	}
	return 0
}

func (x *PullMsgBySeqReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PullMsgBySeqResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string     `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	MsgList        []*MsgData `protobuf:"bytes,2,rep,name=msgList,proto3" json:"msgList,omitempty"`
}

func (x *PullMsgBySeqResp) Reset() {
	*x = PullMsgBySeqResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullMsgBySeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullMsgBySeqResp) ProtoMessage() {}

func (x *PullMsgBySeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullMsgBySeqResp.ProtoReflect.Descriptor instead.
func (*PullMsgBySeqResp) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{23}
}

func (x *PullMsgBySeqResp) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *PullMsgBySeqResp) GetMsgList() []*MsgData {
	if x != nil {
		return x.MsgList
	}
	return nil
}

type SendMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *MsgData `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendMsgReq) Reset() {
	*x = SendMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgReq) ProtoMessage() {}

func (x *SendMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgReq.ProtoReflect.Descriptor instead.
func (*SendMsgReq) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{24}
}

func (x *SendMsgReq) GetMsg() *MsgData {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SendMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailedMsg string `protobuf:"bytes,1,opt,name=failedMsg,proto3" json:"failedMsg,omitempty"` // 服务繁忙 ? 不是好友 ? 已被拉黑 ?
}

func (x *SendMsgResp) Reset() {
	*x = SendMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgResp) ProtoMessage() {}

func (x *SendMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgResp.ProtoReflect.Descriptor instead.
func (*SendMsgResp) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{25}
}

func (x *SendMsgResp) GetFailedMsg() string {
	if x != nil {
		return x.FailedMsg
	}
	return ""
}

type UpdateSubscribedConversationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string   `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ConversationIds []string `protobuf:"bytes,2,rep,name=ConversationIds,proto3" json:"ConversationIds,omitempty"`
}

func (x *UpdateSubscribedConversationsReq) Reset() {
	*x = UpdateSubscribedConversationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscribedConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscribedConversationsReq) ProtoMessage() {}

func (x *UpdateSubscribedConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscribedConversationsReq.ProtoReflect.Descriptor instead.
func (*UpdateSubscribedConversationsReq) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateSubscribedConversationsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateSubscribedConversationsReq) GetConversationIds() []string {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

type UpdateSubscribedConversationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSubscribedConversationsResp) Reset() {
	*x = UpdateSubscribedConversationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscribedConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscribedConversationsResp) ProtoMessage() {}

func (x *UpdateSubscribedConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscribedConversationsResp.ProtoReflect.Descriptor instead.
func (*UpdateSubscribedConversationsResp) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{27}
}

type ListAllSubscribersByConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=ConversationId,proto3" json:"ConversationId,omitempty"`
}

func (x *ListAllSubscribersByConversationReq) Reset() {
	*x = ListAllSubscribersByConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllSubscribersByConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllSubscribersByConversationReq) ProtoMessage() {}

func (x *ListAllSubscribersByConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllSubscribersByConversationReq.ProtoReflect.Descriptor instead.
func (*ListAllSubscribersByConversationReq) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{28}
}

func (x *ListAllSubscribersByConversationReq) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type ListAllSubscribersByConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=UserIds,proto3" json:"UserIds,omitempty"`
}

func (x *ListAllSubscribersByConversationResp) Reset() {
	*x = ListAllSubscribersByConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllSubscribersByConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllSubscribersByConversationResp) ProtoMessage() {}

func (x *ListAllSubscribersByConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllSubscribersByConversationResp.ProtoReflect.Descriptor instead.
func (*ListAllSubscribersByConversationResp) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{29}
}

func (x *ListAllSubscribersByConversationResp) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type CreateConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []string `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *CreateConversationReq) Reset() {
	*x = CreateConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationReq) ProtoMessage() {}

func (x *CreateConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationReq.ProtoReflect.Descriptor instead.
func (*CreateConversationReq) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{30}
}

func (x *CreateConversationReq) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type CreateConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
}

func (x *CreateConversationResp) Reset() {
	*x = CreateConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationResp) ProtoMessage() {}

func (x *CreateConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationResp.ProtoReflect.Descriptor instead.
func (*CreateConversationResp) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{31}
}

func (x *CreateConversationResp) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

var File_websocket_proto protoreflect.FileDescriptor

var file_websocket_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x43, 0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf2, 0x02, 0x0a, 0x07, 0x4d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b,
	0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12,
	0x2e, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x2e, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x91, 0x01, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x4f, 0x53,
	0x50, 0x75, 0x73, 0x68, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x4f, 0x53, 0x50, 0x75, 0x73, 0x68, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x4f, 0x53, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x4f, 0x53, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x22, 0x74, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x76, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65,
	0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x76, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e,
	0x76, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x07, 0x50,
	0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x07, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x6c,
	0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x4d,
	0x73, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8e, 0x02, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03,
	0x74, 0x6f, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x76, 0x4f, 0x70,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x63, 0x76, 0x4f, 0x70, 0x74, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x76,
	0x4f, 0x70, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x22, 0x46, 0x0a, 0x0b, 0x49, 0x4d, 0x4d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x51, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0x71, 0x0a, 0x0b, 0x49, 0x4d, 0x4d, 0x73, 0x67, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x51,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x70, 0x75,
	0x73, 0x68, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x22, 0x65, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x67, 0x65, 0x4e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x5e, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5b, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a, 0x13, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x16, 0x0a, 0x14, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x57, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5d, 0x0a, 0x1b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x50, 0x75,
	0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x53, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x53, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x61, 0x0a, 0x10, 0x50, 0x75, 0x6c, 0x6c, 0x4d,
	0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2b, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x4d, 0x73, 0x67, 0x22, 0x64, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x23, 0x0a, 0x21, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x4d, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x40,
	0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x22, 0x31, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x22, 0x40, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x2a, 0x33, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x76,
	0x4f, 0x70, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x76, 0x41, 0x6e, 0x64, 0x54, 0x69,
	0x70, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x65, 0x63, 0x76, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x76, 0x10, 0x02, 0x2a, 0x2b, 0x0a, 0x09, 0x50, 0x75,
	0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x4d, 0x73, 0x67, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x10, 0x01, 0x32, 0xf1, 0x05, 0x0a, 0x10, 0x77, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x07,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x50, 0x75, 0x6c, 0x6c,
	0x4d, 0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75,
	0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c,
	0x4d, 0x73, 0x67, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x1d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x75, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_websocket_proto_rawDescOnce sync.Once
	file_websocket_proto_rawDescData = file_websocket_proto_rawDesc
)

func file_websocket_proto_rawDescGZIP() []byte {
	file_websocket_proto_rawDescOnce.Do(func() {
		file_websocket_proto_rawDescData = protoimpl.X.CompressGZIP(file_websocket_proto_rawDescData)
	})
	return file_websocket_proto_rawDescData
}

var file_websocket_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_websocket_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_websocket_proto_goTypes = []interface{}{
	(MsgRecvOpt)(0),                              // 0: pb.MsgRecvOpt
	(PushEvent)(0),                               // 1: pb.PushEvent
	(*PushBody)(nil),                             // 2: pb.PushBody
	(*MsgData)(nil),                              // 3: pb.MsgData
	(*MsgDataList)(nil),                          // 4: pb.MsgDataList
	(*OfflinePush)(nil),                          // 5: pb.OfflinePush
	(*MsgOptions)(nil),                           // 6: pb.MsgOptions
	(*ConvData)(nil),                             // 7: pb.ConvData
	(*ConvDataList)(nil),                         // 8: pb.ConvDataList
	(*PullMsg)(nil),                              // 9: pb.PullMsg
	(*PullMsgList)(nil),                          // 10: pb.PullMsgList
	(*UserConversation)(nil),                     // 11: pb.UserConversation
	(*IMMsgDataMQ)(nil),                          // 12: pb.IMMsgDataMQ
	(*IMMsgPushMQ)(nil),                          // 13: pb.IMMsgPushMQ
	(*ListUserConversationReq)(nil),              // 14: pb.ListUserConversationReq
	(*ListUserConversationResp)(nil),             // 15: pb.ListUserConversationResp
	(*GetUserConversationsReq)(nil),              // 16: pb.GetUserConversationsReq
	(*GetUserConversationsResp)(nil),             // 17: pb.GetUserConversationsResp
	(*ClearUnreadCountReq)(nil),                  // 18: pb.ClearUnreadCountReq
	(*ClearUnreadCountResp)(nil),                 // 19: pb.ClearUnreadCountResp
	(*DeleteConversationReq)(nil),                // 20: pb.DeleteConversationReq
	(*DeleteConversationResp)(nil),               // 21: pb.DeleteConversationResp
	(*DeleteConversationAllMsgReq)(nil),          // 22: pb.DeleteConversationAllMsgReq
	(*DeleteConversationAllMsgResp)(nil),         // 23: pb.DeleteConversationAllMsgResp
	(*PullMsgBySeqReq)(nil),                      // 24: pb.PullMsgBySeqReq
	(*PullMsgBySeqResp)(nil),                     // 25: pb.PullMsgBySeqResp
	(*SendMsgReq)(nil),                           // 26: pb.SendMsgReq
	(*SendMsgResp)(nil),                          // 27: pb.SendMsgResp
	(*UpdateSubscribedConversationsReq)(nil),     // 28: pb.UpdateSubscribedConversationsReq
	(*UpdateSubscribedConversationsResp)(nil),    // 29: pb.UpdateSubscribedConversationsResp
	(*ListAllSubscribersByConversationReq)(nil),  // 30: pb.ListAllSubscribersByConversationReq
	(*ListAllSubscribersByConversationResp)(nil), // 31: pb.ListAllSubscribersByConversationResp
	(*CreateConversationReq)(nil),                // 32: pb.CreateConversationReq
	(*CreateConversationResp)(nil),               // 33: pb.CreateConversationResp
}
var file_websocket_proto_depIdxs = []int32{
	1,  // 0: pb.PushBody.event:type_name -> pb.PushEvent
	5,  // 1: pb.MsgData.offlinePush:type_name -> pb.OfflinePush
	6,  // 2: pb.MsgData.msgOptions:type_name -> pb.MsgOptions
	3,  // 3: pb.MsgDataList.list:type_name -> pb.MsgData
	7,  // 4: pb.ConvDataList.list:type_name -> pb.ConvData
	9,  // 5: pb.PullMsgList.list:type_name -> pb.PullMsg
	0,  // 6: pb.UserConversation.msgRecvOpt:type_name -> pb.MsgRecvOpt
	3,  // 7: pb.IMMsgDataMQ.msg:type_name -> pb.MsgData
	2,  // 8: pb.IMMsgPushMQ.pushBody:type_name -> pb.PushBody
	11, // 9: pb.ListUserConversationResp.userConversations:type_name -> pb.UserConversation
	11, // 10: pb.GetUserConversationsResp.userConversations:type_name -> pb.UserConversation
	3,  // 11: pb.PullMsgBySeqResp.msgList:type_name -> pb.MsgData
	3,  // 12: pb.SendMsgReq.msg:type_name -> pb.MsgData
	26, // 13: pb.websocketService.SendMsg:input_type -> pb.SendMsgReq
	24, // 14: pb.websocketService.PullMsgBySeq:input_type -> pb.PullMsgBySeqReq
	18, // 15: pb.websocketService.ClearUnreadCount:input_type -> pb.ClearUnreadCountReq
	20, // 16: pb.websocketService.DeleteConversation:input_type -> pb.DeleteConversationReq
	22, // 17: pb.websocketService.DeleteConversationAllMsg:input_type -> pb.DeleteConversationAllMsgReq
	14, // 18: pb.websocketService.ListUserConversation:input_type -> pb.ListUserConversationReq
	28, // 19: pb.websocketService.UpdateSubscribedConversations:input_type -> pb.UpdateSubscribedConversationsReq
	30, // 20: pb.websocketService.ListAllSubscribersByConversation:input_type -> pb.ListAllSubscribersByConversationReq
	32, // 21: pb.websocketService.CreateConversation:input_type -> pb.CreateConversationReq
	27, // 22: pb.websocketService.SendMsg:output_type -> pb.SendMsgResp
	25, // 23: pb.websocketService.PullMsgBySeq:output_type -> pb.PullMsgBySeqResp
	19, // 24: pb.websocketService.ClearUnreadCount:output_type -> pb.ClearUnreadCountResp
	21, // 25: pb.websocketService.DeleteConversation:output_type -> pb.DeleteConversationResp
	23, // 26: pb.websocketService.DeleteConversationAllMsg:output_type -> pb.DeleteConversationAllMsgResp
	15, // 27: pb.websocketService.ListUserConversation:output_type -> pb.ListUserConversationResp
	29, // 28: pb.websocketService.UpdateSubscribedConversations:output_type -> pb.UpdateSubscribedConversationsResp
	31, // 29: pb.websocketService.ListAllSubscribersByConversation:output_type -> pb.ListAllSubscribersByConversationResp
	33, // 30: pb.websocketService.CreateConversation:output_type -> pb.CreateConversationResp
	22, // [22:31] is the sub-list for method output_type
	13, // [13:22] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_websocket_proto_init() }
func file_websocket_proto_init() {
	if File_websocket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_websocket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflinePush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullMsgList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMsgDataMQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMsgPushMQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConversationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConversationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearUnreadCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearUnreadCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConversationAllMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConversationAllMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullMsgBySeqReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullMsgBySeqResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscribedConversationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscribedConversationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllSubscribersByConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllSubscribersByConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_websocket_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_websocket_proto_goTypes,
		DependencyIndexes: file_websocket_proto_depIdxs,
		EnumInfos:         file_websocket_proto_enumTypes,
		MessageInfos:      file_websocket_proto_msgTypes,
	}.Build()
	File_websocket_proto = out.File
	file_websocket_proto_rawDesc = nil
	file_websocket_proto_goTypes = nil
	file_websocket_proto_depIdxs = nil
}
